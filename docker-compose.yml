version: "3.8"

services:

  dashboard-api:
    build:
      context: ./services/dashboard_api
    container_name: dashboard_api
    ports:
      - "8000:8000"
    environment:
      DB_URL: postgres://user:password@postgres:5432/edgedb
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: edgetoken
      INFLUXDB_ORG: EdgeOrg
      INFLUXDB_BUCKET: EdgeBucket
      KAFKA_BROKER: kafka:9092
    depends_on:
      - postgres
      - influxdb
      - kafka

  polling-service:
    build:
      context: ./services/polling_service
    container_name: polling_service
    environment:
      LOCAL_SERVER_URLS: http://local-server/api/data
      LOCAL_SERVER_AUTH_TOKEN: dummy_token
      POLLING_INTERVAL: 30
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka

  processing-service:
    build:
      context: ./services/processing_service
    container_name: processing_service
    environment:
      TRACE_PROXY_HOST: trace-proxy
      MES_UPLOAD_URL: http://mes-server/api/upload
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka

  trigger-service:
    build:
      context: ./services/trigger_service
    container_name: trigger_service
    environment:
      MQTT_BROKER: mqtt-broker
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka

  machine-interface:
    build:
      context: ./services/machine_interface
    container_name: machine_interface
    environment:
      PLC_IP: 192.168.10.2
      PLC_PORT: 502
      KAFKA_BROKER: kafka:9092
    depends_on:
      - kafka

  

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_DB: edgedb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user"]
      interval: 5s
      timeout: 5s
      retries: 5

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdata:/var/lib/influxdb2
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: adminpass
      DOCKER_INFLUXDB_INIT_ORG: EdgeOrg
      DOCKER_INFLUXDB_INIT_BUCKET: EdgeBucket
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: edgetoken

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 10

volumes:
  pgdata:
  influxdata:
